# This is a basic workflow to help you get started with Actions

name: CI-CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  #pull_request:
   # branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  push_to_Docker_Hub:
      # The type of runner that the job will run on
      runs-on: self-hosted
      strategy:
       matrix:
        node-version: [14.x]
      # build docker image and push to docker hub
      # only if the app build and test successfully
      steps:
        - name: checkout repo
          uses: actions/checkout@v2

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v1
      
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
      
        - name: Build and push
          uses: docker/build-push-action@v2
          with:
            context: ./
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_PROJECT }}/todo-app:latest
          
  run_on_container:
      # The type of runner that the job will run on
      runs-on: self-hosted
      # build docker image and push to docker hub
      # only if the app build and test successfully
      needs: [push_to_Docker_Hub]
      steps:
        - name: Deploy to Digital Ocean droplet via SSH action
          uses: appleboy/ssh-action@master
          with:
            image: ${{ secrets.DOCKERHUB_PROJECT }}/todo-app:latest
            script: |
              # Stop all running Docker Containers
              docker stop elastic_sutherland
              docker rm elastic_sutherland

              # Run a new container from a new image
              docker run -d -p 1012:1012 --name elastic_sutherland -t ${{secrets.DOCKERHUB_PROJECT}}/todo-app:latest


